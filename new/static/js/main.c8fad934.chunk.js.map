{"version":3,"sources":["logo.svg","assets/0-digitalize.jpg","assets/1-modernize.jpg","assets/2-transform.jpg","assets/3-innovate.jpg","assets/4-contact.jpg","site.svg","qr.svg","framework/Links.tsx","framework/Jumbotron.tsx","framework/JumbotronSlide.tsx","application/Routes.tsx","pages/DigitalizeSlide.tsx","pages/ModernizeSlide.tsx","pages/TransformSlide.tsx","pages/InnovateSlide.tsx","pages/ContactSlide.tsx","pages/HomeContent.tsx","pages/DigitalizeContent.tsx","pages/ModernizeContent.tsx","pages/TransformContent.tsx","pages/InnovateContent.tsx","framework/GoogleCaptcha.tsx","pages/ContactWidget.tsx","framework/SVG.tsx","pages/ContactContent.tsx","application/AppLogo.tsx","application/AppBrand.tsx","application/AppMenu.tsx","application/AppHeader.tsx","application/AppBody.tsx","application/AppContent.tsx","application/AppFooter.tsx","application/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","LinkTarget","Jumbotron","props","interval","state","index","switchTo","bind","this","setInterval","clearInterval","children","count","React","Children","setState","switchSlide","child","map","i","switchers","className","onClick","Component","JumbotronSlide","rootStyle","backgroundImage","backgroundImg","style","RouteID","SecureLink","href","Routes","path","type","rels","isNoFollow","push","isExternal","isNoOpener","isNoReferrer","target","Self","includes","Blank","Parent","Top","length","isDownload","rel","join","download","to","PureComponent","InternalLink","validateRouteID","routeID","linkTitle","Object","keys","toString","console","error","ExternalLink","DigitalizeSlide","id","ROUTE_ID_DIGITALIZE","ROUTE_ID_CONTACT","ModernizeSlide","ROUTE_ID_MODERNIZE","TransformSlide","ROUTE_ID_TRANSFORM","InnovateSlide","ROUTE_ID_INNOVATE","ContactSlide","HomeContent","images","digitalize","modernize","transform","innovate","contact","links","document","getElementsByTagName","link","item","filter","x","endsWith","forEach","createElement","as","head","appendChild","DigitalizeContent","ModernizeContent","TransformContent","InnovateContent","GoogleCaptcha","onLoad","size","body","clientWidth","window","grecaptcha","render","sitekey","theme","callback","onValidated","captchaOnLoad","url","scripts","script","src","async","data-sitekey","ContactWidget","baseState","values","name","email","phone","subject","message","token","errors","status","onToken","onChange","onSubmit","onReset","setValue","event","value","preventDefault","hasErrors","setError","gtag","submissionStart","performance","now","options","method","headers","fetch","submissionEnd","viewForm","disabled","viewSent","logo","alt","viewError","SVG","icon","xlinkHref","site","ContactContent","qr","ROUTE_ID_HOME","pageTitle","meta","title","description","control","AppLogo","AppBrand","AppMenuItem","definition","AppMenuState","AppMenuDesktop","Items","parseInt","parents","key","AppMenuTablet","AppMenuMobileState","isExpanded","AppMenuMobile","clicked","e","aria-expanded","AppHeader","AppBody","AppContent","metas","mapped","invalidateMetaValue","hasKey","findIndex","content","removeChild","AppFooterSettings","isSticky","AppFooter","settings","existing","localStorage","getItem","SETTING_NAME","JSON","parse","prevProps","prevState","snapshot","setItem","stringify","Date","getFullYear","App","history","createBrowserHistory","basename","process","listen","location","pathname","search","RoutesSwitch","exact","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c8fad934.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.fb0835c5.svg\";","module.exports = __webpack_public_path__ + \"static/media/0-digitalize.5c98be31.jpg\";","module.exports = __webpack_public_path__ + \"static/media/1-modernize.fc41d06f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2-transform.02848e14.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3-innovate.316590e5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/4-contact.36002a26.jpg\";","module.exports = __webpack_public_path__ + \"static/media/site.cc980bf7.svg\";","module.exports = __webpack_public_path__ + \"static/media/qr.a4a95d16.svg\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Routes, { RouteID } from '../application/Routes';\r\n\r\nexport enum LinkTarget {\r\n  Self = 1,\r\n  Blank = 2,\r\n  Parent = 3,\r\n  Top = 4\r\n}\r\n\r\nexport interface GenericLinkProps {\r\n  href: string;\r\n  type?: 'primary'\r\n      |'secondary'\r\n      |'tertiary'\r\n      |'primary button'\r\n      |'secondary button'\r\n      |'tertiary button'\r\n      |'primary accent'\r\n      |'secondary accent'\r\n      |'tertiary accent'\r\n      |'primary accent button'\r\n      |'secondary accent button'\r\n      |'tertiary accent button';\r\n  target?: LinkTarget | null;\r\n  isNoFollow?: boolean;\r\n  isNoOpener?: boolean;\r\n  isNoReferrer?: boolean;\r\n  isDownload?: boolean;\r\n}\r\n\r\nexport interface SecureLinkProps extends GenericLinkProps {\r\n    isExternal?: boolean;\r\n}\r\n\r\nexport default class SecureLink extends React.PureComponent<SecureLinkProps> {  \r\n  render() {\r\n    const href: string = typeof this.props.href === \"number\" ? Routes[this.props.href as RouteID].path : this.props.href as string;\r\n    const className = this.props.type;\r\n    const rels = [];\r\n    \r\n    if (this.props.isNoFollow) {\r\n      rels.push(\"nofollow\");\r\n    }\r\n\r\n    if (this.props.isExternal) {\r\n      rels.push(\"external\");\r\n    }\r\n\r\n    if (this.props.isNoOpener) {\r\n      rels.push(\"noopener\");\r\n    }\r\n\r\n    if (this.props.isNoReferrer) {\r\n      rels.push(\"noreferrer\");\r\n    }\r\n\r\n    let target = \"\";\r\n\r\n    switch (this.props.target)\r\n    {\r\n      case LinkTarget.Self:\r\n        if (!rels.includes(\"noreferrer\")) {\r\n          rels.push(\"noreferrer\");\r\n        }\r\n\r\n        target = \"_self\";\r\n        break;\r\n        \r\n      case LinkTarget.Blank:\r\n        if (!rels.includes(\"noreferrer\")) {\r\n          rels.push(\"noreferrer\");\r\n        }\r\n\r\n        if (!rels.includes(\"noopener\")) {\r\n          rels.push(\"noopener\");\r\n        }\r\n\r\n        target = \"_blank\";\r\n        break;\r\n\r\n      case LinkTarget.Parent:\r\n        if (!rels.includes(\"noreferrer\")) {\r\n          rels.push(\"noreferrer\");\r\n        }\r\n\r\n        target = \"_parent\";\r\n        break;\r\n        \r\n      case LinkTarget.Top:\r\n        if (!rels.includes(\"noreferrer\")) {\r\n          rels.push(\"noreferrer\");\r\n        }\r\n\r\n        target = \"_top\";\r\n        break;\r\n\r\n      default:\r\n        if (rels.length) {\r\n          return this.props.isExternal || this.props.isDownload ? (\r\n            <a href={href} className={className} rel={rels.join(\" \")} download={this.props.isDownload}>\r\n              {this.props.children}\r\n            </a>\r\n          ) : (\r\n            <Link to={href} className={className} rel={rels.join(\" \")}>\r\n              {this.props.children}\r\n            </Link>\r\n          );\r\n        }\r\n\r\n        return this.props.isExternal || this.props.isDownload ? (\r\n          <a href={href} className={className} download={this.props.isDownload}>\r\n            {this.props.children}\r\n          </a>\r\n        ) : (\r\n          <Link to={href} className={className}>\r\n            {this.props.children}\r\n          </Link>\r\n        );\r\n    };   \r\n    \r\n    return this.props.isExternal || this.props.isDownload ? (\r\n      <a href={href} className={className} target={target} rel={rels.join(\" \")} download={this.props.isDownload}>\r\n        {this.props.children}\r\n      </a>\r\n    ) : (\r\n      <Link to={href} className={className} target={target} rel={rels.join(\" \")}>\r\n        {this.props.children}\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n\r\nexport interface InternalLinkProps {\r\n  routeID: RouteID;\r\n  type?: 'primary'\r\n      |'secondary'\r\n      |'tertiary'\r\n      |'primary button'\r\n      |'secondary button'\r\n      |'tertiary button'\r\n      |'primary accent'\r\n      |'secondary accent'\r\n      |'tertiary accent'\r\n      |'primary accent button'\r\n      |'secondary accent button'\r\n      |'tertiary accent button';\r\n  target?: LinkTarget | null;\r\n}\r\n\r\nexport class InternalLink extends React.PureComponent<InternalLinkProps, any> {\r\n  componentDidMount() {\r\n    this.validateRouteID();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.validateRouteID();    \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <SecureLink href={Routes[this.props.routeID].path} \r\n                  type={this.props.type}\r\n                  target={this.props.target}\r\n                  isExternal={false}>\r\n        {this.props.children ? this.props.children : Routes[this.props.routeID].linkTitle}\r\n      </SecureLink>\r\n    )\r\n  }\r\n\r\n  validateRouteID() {\r\n    if (!Object.keys(Routes).includes(this.props.routeID.toString())) {\r\n      console.error('Unknown route ID [%s] is passed to the InternalLink', this.props.routeID);\r\n    }\r\n  }\r\n}\r\n\r\nexport interface ExternalLinkProps extends GenericLinkProps {\r\n}\r\n\r\nexport class ExternalLink extends React.PureComponent<ExternalLinkProps, any> {\r\n  render() {\r\n    return (\r\n      <SecureLink isExternal={true} {... this.props}>\r\n        {this.props.children}\r\n      </SecureLink>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport JumbotronSlideProps from './JumbotronSlide';\r\nimport './Jumbotron.scss';\r\n\r\nexport interface JumbotronProps {\r\n  children?: React.ReactElement<JumbotronSlideProps>[] | React.ReactElement<JumbotronSlideProps>\r\n}\r\n\r\nexport interface JumbotronState {\r\n  index: number\r\n}\r\n\r\nexport class Jumbotron extends React.Component<JumbotronProps, JumbotronState> {\r\n  private interval: any;\r\n\r\n  constructor(props: JumbotronProps) {\r\n    super(props);\r\n    this.state = { index: 3 };\r\n    this.switchTo = this.switchTo.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setInterval();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.clearInterval();\r\n  }\r\n\r\n  switchSlide() {\r\n    if (this.props.children && this.state) {\r\n      const count = React.Children.count(this.props.children);\r\n      const index = this.state.index < count - 1 ? this.state.index + 1 : 0;\r\n      this.setState({ index: index });\r\n    }\r\n  }\r\n\r\n  switchTo(index: number) {\r\n    this.clearInterval();\r\n    this.setInterval();\r\n    this.setState({ index: index });\r\n  }\r\n\r\n  setInterval() {\r\n    this.interval = setInterval(() => this.switchSlide(), 5000);\r\n  }\r\n\r\n  clearInterval() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  render() {\r\n    const index = this.state ? this.state.index : 0;\r\n    const child = React.Children.map(this.props.children, (child, i) => i === index && child);\r\n\r\n    const switchers = React.Children.map(this.props.children, (child, i) => {\r\n      if (i === index) {\r\n        return <button className=\"jumbotron-switch selected\" onClick={() => this.switchTo(i)} />\r\n      } else {\r\n        return <button className=\"jumbotron-switch\" onClick={() => this.switchTo(i)} />\r\n      }\r\n    });\r\n\r\n    return (\r\n      <div className=\"jumbotron\">\r\n        {child}\r\n        <div className=\"jumbotron-picker-position\">\r\n          <div className=\"jumbotron-picker-container\">\r\n            {switchers}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport './JumbotronSlide.scss';\r\n\r\nexport class JumbotronSlideProps {\r\n  backgroundImg?: string;\r\n}\r\n\r\nexport class JumbotronSlideState {\r\n  backgroundImg?: string;\r\n}\r\n\r\nexport default class JumbotronSlide extends React.Component<JumbotronSlideProps, JumbotronSlideState> {\r\n  render() {\r\n    const rootStyle = {\r\n      backgroundImage: 'url(' + this.props.backgroundImg + ')',\r\n    };\r\n\r\n    return (\r\n      <div className=\"jumbotron-slide\" style={rootStyle}>\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport HomeContent from '../pages/HomeContent';\r\nimport DigitalizeContent from \"../pages/DigitalizeContent\";\r\nimport ModernizeContent from \"../pages/ModernizeContent\";\r\nimport TransformContent from \"../pages/TransformContent\";\r\nimport InnovateContent from \"../pages/InnovateContent\";\r\nimport ContactContent from '../pages/ContactContent';\r\n\r\nexport enum RouteID {\r\n    ROUTE_ID_HOME = 1,\r\n    ROUTE_ID_DIGITALIZE,\r\n    ROUTE_ID_MODERNIZE,\r\n    ROUTE_ID_TRANSFORM,\r\n    ROUTE_ID_INNOVATE,\r\n    ROUTE_ID_CONTACT\r\n}\r\n\r\nexport interface MetaDef {\r\n    title: string,\r\n    description: string,\r\n    image?: string,\r\n    url?: string\r\n}\r\n\r\nexport interface RouteDef {\r\n    path: string,\r\n    pageTitle: string,\r\n    linkTitle: string,\r\n    hash?: string, /*  An anchor on the page */\r\n    control: React.ReactElement, /* A control to render the page */\r\n    parents?: RouteID[],\r\n    meta?: MetaDef\r\n}\r\n\r\nconst Routes: { [id: number]: RouteDef } = {\r\n    [RouteID.ROUTE_ID_HOME]: { \r\n        path: '/', \r\n        pageTitle: 'Welcome',\r\n        linkTitle: 'Home',\r\n        meta: {\r\n            title: \"Ultima Labs | Welcome\",\r\n            description: \"We digitalize. We modernize. We transform. We innovate.\"\r\n        },\r\n        control: <HomeContent />,},\r\n    [RouteID.ROUTE_ID_DIGITALIZE]: {\r\n        path: '/digitalize',\r\n        pageTitle: 'The story of digitalization',\r\n        linkTitle: 'We digitalize',\r\n        meta: {\r\n            title: \"Ultima Labs | We digitalize\",\r\n            description: \"The story of digitalization.\"\r\n        },\r\n        control: <DigitalizeContent /> },\r\n    [RouteID.ROUTE_ID_MODERNIZE]: {\r\n        path: '/modernize',\r\n        pageTitle: 'The story of modernization',\r\n        linkTitle: 'We modernize',\r\n        meta: {\r\n            title: \"Ultima Labs | We modernize\",\r\n            description: \"The story of modernization.\"\r\n        },\r\n        control: <ModernizeContent /> },\r\n    [RouteID.ROUTE_ID_TRANSFORM]: {\r\n        path: '/transform',\r\n        pageTitle: 'The story of transformation',\r\n        linkTitle: 'We transform',\r\n        meta: {\r\n            title: \"Ultima Labs | We transform\",\r\n            description: \"The story of transformation.\"\r\n        },\r\n        control: <TransformContent /> },\r\n    [RouteID.ROUTE_ID_INNOVATE]: {\r\n        path: '/innovate',\r\n        pageTitle: 'The story of innovation',\r\n        linkTitle: 'We innovate',\r\n        meta: {\r\n            title: \"Ultima Labs | We innovate\",\r\n            description: \"The story of innovation.\"\r\n        },\r\n        control: <InnovateContent /> },\r\n    [RouteID.ROUTE_ID_CONTACT]: {\r\n        path: '/contact', \r\n        pageTitle: 'Contact us',\r\n        linkTitle: 'Contact us',\r\n        meta: {\r\n            title: \"Ultima Labs | Contact us\",\r\n            description: \"Let's see how we can help you achieve your goals!\"\r\n        },\r\n        control: <ContactContent /> }\r\n};\r\n\r\nexport default Routes;","import React from 'react';\r\nimport './DigitalizeSlide.scss';\r\nimport {InternalLink} from \"../framework/Links\";\r\nimport {RouteID} from \"../application/Routes\";\r\n\r\nexport default class DigitalizeSlide extends React.PureComponent {\r\n  render() {\r\n    return (\r\n        <section id=\"digitalize-slide\">\r\n            <h1>\r\n                WE DIGITALIZE\r\n            </h1>\r\n            <p>\r\n                Digitalization helps speed up your business and free up your human resources, boost throughput and streamline your operations.\r\n            </p>\r\n            <p>\r\n                At Ultima Labs we have a necessary expertise to provide you with quality digitalization solutions that are\r\n                tailored specifically for your business needs.\r\n            </p>\r\n            <p>\r\n                <InternalLink routeID={RouteID.ROUTE_ID_DIGITALIZE}>READ THE STORY</InternalLink>\r\n            </p>\r\n            <div>\r\n                <InternalLink routeID={RouteID.ROUTE_ID_CONTACT} type=\"primary accent button\" />\r\n            </div>\r\n      </section>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport './ModernizeSlide.scss';\r\nimport {InternalLink} from \"../framework/Links\";\r\nimport {RouteID} from \"../application/Routes\";\r\n\r\nexport default class ModernizeSlide extends React.PureComponent {\r\n  render() {\r\n    return (\r\n        <section id=\"modernize-slide\">\r\n            <h1>\r\n                WE MODERNIZE\r\n            </h1>\r\n            <p>\r\n                Technology evolves rapidly. What have been working for years may no longer reflect your customers needs.\r\n            </p>\r\n            <p>\r\n                While staying in touch with reality Ultima Labs team stays in touch with the modern trends and technology as well.\r\n                Should it be a facelift for you platform or more comprehensive upgrade - we are here to help.\r\n            </p>\r\n            <p>\r\n                <InternalLink routeID={RouteID.ROUTE_ID_MODERNIZE}>READ THE STORY</InternalLink>\r\n            </p>\r\n            <div>\r\n                <InternalLink routeID={RouteID.ROUTE_ID_CONTACT} type=\"primary accent button\" />\r\n            </div>\r\n        </section>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport './TransformSlide.scss';\r\nimport {InternalLink} from \"../framework/Links\";\r\nimport {RouteID} from \"../application/Routes\";\r\n\r\nexport default class TransformSlide extends React.PureComponent {\r\n  render() {\r\n    return (\r\n        <section id=\"transform-slide\">\r\n            <h1>\r\n                WE TRANSFORM\r\n            </h1>\r\n            <p>\r\n                As customer needs change, your product or service has to change as well.\r\n            </p>\r\n            <p>\r\n                Here at Ultima Labs we embrace transformation, helping our customers transform their businesses and\r\n                processes regardless of the complexity and with no compromise on quality.\r\n            </p>\r\n            <p>\r\n                <InternalLink routeID={RouteID.ROUTE_ID_TRANSFORM}>READ THE STORY</InternalLink>\r\n            </p>\r\n            <div>\r\n                <InternalLink routeID={RouteID.ROUTE_ID_CONTACT} type=\"primary accent button\" />\r\n            </div>\r\n        </section>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport './InnovateSlide.scss';\r\nimport {InternalLink} from \"../framework/Links\";\r\nimport {RouteID} from \"../application/Routes\";\r\n\r\nexport default class InnovateSlide extends React.PureComponent {\r\n  render() {\r\n    return (\r\n        <section id=\"innovate-slide\">\r\n            <h1>\r\n                WE INNOVATE\r\n            </h1>\r\n            <p>\r\n                Innovation is inevitable aspect for every business in order to lead the world for the brighter future.\r\n            </p>\r\n            <p>\r\n                We are here to help you bring your innovation ideas into life, make them a new reality.\r\n            </p>\r\n            <p>\r\n                <InternalLink routeID={RouteID.ROUTE_ID_INNOVATE}>READ THE STORY</InternalLink>\r\n            </p>\r\n            <div>\r\n                <InternalLink routeID={RouteID.ROUTE_ID_CONTACT} type=\"primary accent button\" />\r\n            </div>\r\n        </section>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport './ContactSlide.scss';\r\nimport {InternalLink} from \"../framework/Links\";\r\nimport {RouteID} from \"../application/Routes\";\r\n\r\nexport default class ContactSlide extends React.PureComponent {\r\n  render() {\r\n    return (\r\n        <section id=\"contact-slide\">\r\n            <h1>\r\n                CONTACT US\r\n            </h1>\r\n            <p>\r\n                Contact us today - let's see how we can help you achieve your goals!\r\n            </p>\r\n            <div>\r\n                <InternalLink routeID={RouteID.ROUTE_ID_CONTACT} type=\"primary accent button\" />\r\n            </div>\r\n        </section>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { Jumbotron } from '../framework/Jumbotron';\r\nimport JumbotronSlide from '../framework/JumbotronSlide';\r\nimport DigitalizeSlide from \"./DigitalizeSlide\";\r\nimport ModernizeSlide from \"./ModernizeSlide\";\r\nimport TransformSlide from \"./TransformSlide\";\r\nimport InnovateSlide from \"./InnovateSlide\";\r\nimport ContactSlide from \"./ContactSlide\";\r\nimport digitalize from '../assets/0-digitalize.jpg'\r\nimport modernize from '../assets/1-modernize.jpg'\r\nimport transform from '../assets/2-transform.jpg'\r\nimport innovate from '../assets/3-innovate.jpg'\r\nimport contact from '../assets/4-contact.jpg'\r\nimport './HomeContent.scss';\r\n\r\nexport default class HomeContent extends React.PureComponent {\r\n    componentDidMount(): void {\r\n        let images = [\r\n            digitalize,\r\n            modernize,\r\n            transform,\r\n            innovate,\r\n            contact\r\n        ];\r\n\r\n        const links = document.getElementsByTagName(\"link\");\r\n        for (let i = 0, length = links.length; i < length; ++i) {\r\n            const link = links.item(i);\r\n            if (link) {\r\n                images = images.filter(x => !link.href.endsWith(x));\r\n            }\r\n        }\r\n\r\n        if (images) {\r\n            images.forEach(x => {\r\n                const link = document.createElement(\"link\");\r\n                link.href = x;\r\n                link.rel = \"preload\";\r\n                link.as = \"image\";\r\n\r\n                document.head.appendChild(link);\r\n            })\r\n        }\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <main>\r\n        <section className=\"section-home\">\r\n          <Jumbotron>\r\n              <JumbotronSlide backgroundImg={digitalize}>\r\n                  <DigitalizeSlide />\r\n              </JumbotronSlide>\r\n              <JumbotronSlide backgroundImg={modernize}>\r\n                  <ModernizeSlide />\r\n              </JumbotronSlide>\r\n              <JumbotronSlide backgroundImg={transform}>\r\n                  <TransformSlide />\r\n              </JumbotronSlide>\r\n              <JumbotronSlide backgroundImg={innovate}>\r\n                  <InnovateSlide />\r\n              </JumbotronSlide>\r\n              <JumbotronSlide backgroundImg={contact}>\r\n                  <ContactSlide />\r\n              </JumbotronSlide>\r\n          </Jumbotron>\r\n        </section>\r\n      </main>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport {InternalLink} from '../framework/Links';\r\nimport {RouteID} from \"../application/Routes\";\r\nimport './DigitalizeContent.scss';\r\n\r\nexport default class DigitalizeContent extends React.PureComponent {\r\n  render() {\r\n    return (\r\n      <main id='digitalize'>\r\n          <section>\r\n              <h5>THE STORY OF DIGITALIZATION</h5>\r\n              <p>\r\n                  A few years ago <strong>Ultima Labs</strong> team have been engaged to assist with the digitalization of the paper-based process\r\n                  for a client in Queensland.\r\n              </p>{/*\r\n              <p>\r\n                  The client sought to improve existing paper-based process by making it electronic-first.\r\n                  Inherently, the paper-based process was slow and was prone to the various human factors: data was inconsistent,\r\n                  was not preventing the invalid input and it was difficult to reconcile data.\r\n              </p>\r\n              <p>\r\n                  During the journey of the digitalization our team gained a necessary expertise in the subject and suggested various solutions.\r\n                  By applying agile methodologies for software development, the solutions were processed in multiple iterations, allowing\r\n                  fast suitability assessments and quick adjustments on the fly with no compromise on quality.\r\n              </p>\r\n              <p>\r\n                  To ease the adoption of the system and onboarding, the existing paper-based data have been digitized.\r\n                  The digitization helped to identify various edge cases that can happen in real life, which were considered\r\n                  in the final implementation as well.\r\n              </p>*/}\r\n          </section>\r\n          <section className='blockquote'>\r\n              <blockquote>\r\n                  <div>\r\n\r\n                  </div>\r\n              </blockquote>\r\n          </section>\r\n          <section className='cta'>\r\n              <InternalLink routeID={RouteID.ROUTE_ID_CONTACT} type='primary accent button'>Contact us</InternalLink>\r\n          </section>\r\n      </main>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport './ModernizeContent.scss';\r\nimport {ExternalLink, InternalLink, LinkTarget} from '../framework/Links';\r\nimport {RouteID} from \"../application/Routes\";\r\nimport photo from \"../assets/jh.jpg\";\r\n\r\n\r\nexport default class ModernizeContent extends React.PureComponent {\r\n  render() {\r\n    return (\r\n      <main id='modernize'>\r\n          <section>\r\n              <h5>THE STORY OF MODERNIZATION</h5>{/*\r\n              <p>\r\n                  <strong>Ultima Labs</strong> team have been engaged\r\n                  by <strong>MPower MSL</strong> to assess modernization of the <strong>Vantage</strong> software\r\n                  they acquired with <strong>Verteda</strong>.\r\n              </p>\r\n              <p>\r\n                  Vantage is the workforce management software developed by Verteda a few decades ago.\r\n\r\n                  While the software itself is using nowadays-decommissioned technology, the rich and comprehensive feature set\r\n                  it provides makes no necessary [and no future development plans].\r\n                  MPower MSL sought for the solutions to make the user interface more appealing and modern-looking.\r\n              </p>\r\n              <p>\r\n                  The task of modernization in this particular case was complicated by two additional factors:\r\n                  there was no way to launch application in debug mode, so it could be analyzed step-by-step, and\r\n                  its codebase was more than a million lines of C++ code.\r\n                  The outdated toolset made it even worse: there was no way obtaining the necessary toolset licenses\r\n                  for us to build the product, so the product could not be extended or amended with its native\r\n                  technology.\r\n              </p>\r\n              <p>\r\n                  After the two-weeks analysis and discussion with the client our team have suggested a solution based\r\n                  on the additional back-end that would be hosted side-by-side and capable to communicate with the legacy software,\r\n                  and offered a REST API for the front-end to use. As the proof of concept a web-based front-end was offered\r\n                  using Angular. The solution supported a two-way communication in real time, delivering concurrent updates\r\n                  for both legacy and modern UIs. To put it simply: any changes made by one user in the legacy system would be immediately\r\n                  reflected in the modern interface for another user and vice versa, changes made in the modern interface would be\r\n                  immediately reflected in the legacy system.\r\n              </p>\r\n              <p>\r\n                  This journey of the modernization proved high technical skills and professionalism that Utlima Labs team possesses.\r\n              </p>\r\n              */}\r\n          </section>{/*\r\n          <section className='blockquote'>\r\n              <blockquote>\r\n                  <img src={photo} alt='Jason Hold, GM Research & Development at MPower MSL'/>\r\n                  <div>\r\n                      Keep up with the great job!.\r\n                      <p>&mdash; Jason Hold, GM Research & Development at MPower MSL</p>\r\n                  </div>\r\n              </blockquote>\r\n          </section>\r\n          <section className='cta'>\r\n              <InternalLink routeID={RouteID.ROUTE_ID_CONTACT} type='primary accent button'>Contact us</InternalLink>\r\n          </section>\r\n          <section>\r\n              <p>Find out more about:</p>\r\n              <p><ExternalLink target={LinkTarget.Blank} href='https://mpowermsl.com/'>MPower MSL</ExternalLink></p>\r\n              <p><ExternalLink target={LinkTarget.Blank} href='https://www.verteda.com/'>Verteda, an MSL company</ExternalLink></p>\r\n              <p><ExternalLink target={LinkTarget.Blank} href='https://www.verteda.com/solutions/workforce-management'>Vantage - Workforce Management</ExternalLink></p>\r\n          </section>*/}\r\n      </main>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport './TransformContent.scss';\r\nimport {ExternalLink, InternalLink} from '../framework/Links';\r\nimport {RouteID} from \"../application/Routes\";\r\nimport photo from \"../assets/mt.jpg\";\r\n\r\n\r\nexport default class TransformContent extends React.PureComponent {\r\n  render() {\r\n    return (\r\n      <main id='transform'>\r\n          <section>\r\n              <h5>THE STORY OF TRANSFORMATION</h5>{/*\r\n              <p>\r\n                  <strong>Ultima Labs</strong> team have been engaged\r\n                  by <strong>GIS People</strong> to assist with the digitalization of disclosure returns process\r\n                  for <strong>Electoral Commission Queensland</strong> (ECQ).\r\n              </p>\r\n              <p>\r\n                  ECQ sought to improve existing paper-based process by making it electronic-first.\r\n                  Inherently, the paper-based process was slow and was prone to the various human factors: data was inconsistent,\r\n                  returns' dates were difficult to track and it was difficult to reconcile data: returns have to be submitted by\r\n                  all relevant parties, and the data must match.\r\n              </p>\r\n              <p>\r\n                  During the journey of the digitalization our team gained a necessary expertise in the subject and suggested various solutions.\r\n                  By applying agile methodologies for software development, the solutions were processed in multiple iterations, allowing\r\n                  fast suitability assessments and quick adjustments on the fly with no compromise on quality.\r\n              </p>\r\n              <p>\r\n                  To ease the adoption of the system and onboarding, the existing paper-based returns have been digitized.\r\n                  The digitization helped to identify various edge cases that can happen in real life, which were considered\r\n                  in the final implementation as well.\r\n              </p>\r\n              <p>\r\n                  <strong>Electronic Disclosure System</strong> as we call it nowadays,\r\n                  has a public part, accessible by anyone (e.g. reports),\r\n                  a secure part, accessible by registered and verified users,\r\n                  and an administrative part, accessible by ECQ administrators only.\r\n                  The returns submitted by the users are validated and verified on the fly,\r\n                  reducing the risks of reporting mistakes, and reconciled automatically,\r\n                  giving a faster response for submitters and reducing the work load for the ECQ staff.\r\n              </p>*/}\r\n          </section>{/*\r\n          <section className='blockquote'>\r\n              <blockquote>\r\n                  <img src={photo} alt='Marcus Trant, Program Manager at Sunsuper'/>\r\n                  <div>\r\n                      You guys awesome!\r\n                      <p>&mdash; Marcus Trant, Program Manager at Sunsuper</p>\r\n                  </div>\r\n              </blockquote>\r\n          </section>\r\n          <section className='cta'>\r\n              <InternalLink routeID={RouteID.ROUTE_ID_CONTACT} type='primary accent button'>Contact us</InternalLink>\r\n          </section>\r\n          <section>\r\n              <p>Find out more about:</p>\r\n              <p><ExternalLink href='https://gispeople.com.au/'>GIS People</ExternalLink></p>\r\n              <p><ExternalLink href='https://www.ecq.qld.gov.au/'>Electoral Commission Queensland</ExternalLink></p>\r\n              <p><ExternalLink href='https://disclosures.ecq.qld.gov.au/'>Electronic Disclosure System</ExternalLink></p>\r\n          </section>*/}\r\n      </main>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport './InnovateContent.scss';\r\nimport {ExternalLink, InternalLink, LinkTarget} from '../framework/Links';\r\nimport {RouteID} from \"../application/Routes\";\r\nimport photo from \"../assets/tb.jpg\";\r\n\r\nexport default class InnovateContent extends React.PureComponent {\r\n  render() {\r\n    return (\r\n      <main id='innovate'>\r\n          <section>\r\n              <h5>THE STORY OF INNOVATION</h5>{/*\r\n              <p>\r\n                  <strong>Ultima Labs</strong> team have been engaged\r\n                  by <strong>Console Group</strong> to assist their team with the innovation in the real estate sector by introducing\r\n                  an integrated payment solution, namely <strong>Console Pay</strong>.\r\n              </p>\r\n              <p>\r\n                  The integrated payment solution became possible via comprehensive integrations of their products,\r\n                  <strong>Console Gateway</strong> and <strong>Console Cloud</strong>, with third party service providers.\r\n              </p>\r\n              <p>\r\n                  Nowadays Console Pay is a powerful direct debit and receipting solution that helps property managers take control of tenant payments.\r\n              </p>\r\n              <p>\r\n                  In order to facilitate and speed up the adoption of the feature, Console Pay was extended with\r\n                  invitations sub-system, allowing property managers to invite their tenants for recurrent rental direct\r\n                  debits.\r\n              </p>\r\n              <p>\r\n                  After a hard work of designing, developing and testing the solution, it proved to be convenient, reliable and\r\n                  secure, going way beyond the current industry standards.\r\n              </p>*/}\r\n          </section>{/*\r\n          <section className='blockquote'>\r\n              <blockquote>\r\n                  <img src={photo} alt='Todd Bowles, Head of Engineering at Console Group'/>\r\n                  <div>\r\n                      Ultima Labs is an excellent provider of quality software solutions. Their team members possess considerable technical knowledge, and the experience and skill to apply it appropriately to the situation to generate excellent outcomes.\r\n                      <br/>\r\n                      We brought Ultima Labs on as a contractor to augment an existing team in the delivery of a piece of integration work. They embedded in the team cleanly and without friction, and the group constantly and consistently delivered high quality incremental improvements and new features.\r\n                      <br/>\r\n                      I recommend Ultima Labs to anyone looking for a self-reliant software developers with an eye for technical detail.\r\n                      <br/>\r\n                      <p>&mdash; Todd Bowles, Head of Engineering at Console Group</p>\r\n                  </div>\r\n              </blockquote>\r\n          </section>\r\n          <section className='cta'>\r\n              <InternalLink routeID={RouteID.ROUTE_ID_CONTACT} type='primary accent button'>Contact us</InternalLink>\r\n          </section>\r\n          <section>\r\n              <p>Find out more about:</p>\r\n              <p><ExternalLink target={LinkTarget.Blank} href='https://www.console.com.au/'>Console Group</ExternalLink></p>\r\n              <p><ExternalLink target={LinkTarget.Blank} href='https://www.console.com.au/add-ons/consolepay/'>Console Pay</ExternalLink></p>\r\n              <p><ExternalLink target={LinkTarget.Blank} href='https://www.console.com.au/products/gateway/'>Console Gateway</ExternalLink></p>\r\n              <p><ExternalLink target={LinkTarget.Blank} href='https://www.console.com.au/products/cloud/'>Console Cloud</ExternalLink></p>\r\n          </section>*/}\r\n      </main>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\ndeclare global {\r\n    interface Window {\r\n        grecaptcha: ReCaptchaInstance\r\n        captchaOnLoad: () => void\r\n    }\r\n}\r\n  \r\ninterface ReCaptchaInstance {\r\n    ready: (cb: () => any) => void\r\n    render: (id: string, options: ReCaptchaRenderOptions | string) => any\r\n    reset: () => void;\r\n}\r\n  \r\ninterface ReCaptchaRenderOptions {\r\n    sitekey: string,\r\n    theme: \"dark\" | \"light\",\r\n    size: \"compact\" | \"normal\"\r\n    callback: any\r\n}\r\n\r\nexport type GoogleReCaptchaValidatedEvent = (token: string) => void;\r\n\r\nexport type GoogleCaptchaProps = {\r\n    onValidated: GoogleReCaptchaValidatedEvent;\r\n}\r\n\r\nexport type GoogleCaptchaState = {\r\n    isReady: boolean;\r\n}\r\n\r\nexport class GoogleCaptcha extends React.Component<GoogleCaptchaProps, GoogleCaptchaState> {\r\n    constructor(props: GoogleCaptchaProps) {\r\n        super(props);\r\n\r\n        this.onLoad = this.onLoad.bind(this);\r\n    }\r\n\r\n    onLoad(): void {\r\n        const size = document.body.clientWidth < 600 ? \"compact\" : \"normal\";\r\n\r\n        window.grecaptcha.render(\"g-recaptcha\", {\r\n            sitekey: \"6LfdGcEUAAAAAOEl8TJPkBLwXzwL4JFWdV4z2vmU\",\r\n            theme: \"light\",\r\n            size: size,\r\n            callback: this.props.onValidated\r\n        });\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        window.captchaOnLoad = this.onLoad;\r\n\r\n        const url = \"https://www.google.com/recaptcha/api.js?onload=captchaOnLoad&render=explicit\";\r\n        const scripts = document.getElementsByTagName(\"script\");\r\n        for (var i = 0, length = scripts.length; i < length; ++i) {\r\n            const script = scripts.item(i);\r\n            if (script && script.src === url) {\r\n                if (window.grecaptcha) {\r\n                    this.onLoad();\r\n                }\r\n\r\n                return;\r\n            }\r\n        }\r\n        \r\n        const script = document.createElement(\"script\");\r\n        script.type = \"text/javascript\";\r\n        script.async = true;\r\n        script.src = url;      \r\n\r\n        document.body.appendChild(script);\r\n    }\r\n\r\n    render(): React.ReactElement {\r\n        return (\r\n            <div id=\"g-recaptcha\" data-sitekey=\"6LfdGcEUAAAAAOEl8TJPkBLwXzwL4JFWdV4z2vmU\"></div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { nameof } from '../framework/Common';\r\nimport { GoogleCaptcha } from '../framework/GoogleCaptcha';\r\nimport logo from '../logo.svg';\r\nimport './ContactWidget.scss';\r\n\r\ndeclare global {\r\n  function gtag(...params: any[]): void;\r\n}\r\n\r\nexport type ContactWidgetFieldsState = {\r\n  name: string;\r\n  email: string;\r\n  phone: string;\r\n  subject: string;\r\n  message: string;\r\n  token: string;\r\n};\r\n\r\nexport type ContactWidgetProps = {\r\n}\r\n\r\nexport type ContactWidgetState = {\r\n  values: ContactWidgetFieldsState;\r\n  errors: ContactWidgetFieldsState;\r\n  status: 'ready' | 'sending' | 'sent' | 'error';\r\n}\r\n\r\nexport default class ContactWidget extends React.Component<ContactWidgetProps, ContactWidgetState> {\r\n  baseState: ContactWidgetState;\r\n\r\n  constructor(props: ContactWidgetProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      values: { \r\n        name: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        subject: \"\",\r\n        message: \"\",\r\n        token: \"\"\r\n      },\r\n      errors: { \r\n        name: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        subject: \"\",\r\n        message: \"\",\r\n        token: \"\"\r\n      },\r\n      status: 'ready'\r\n    }\r\n\r\n    this.baseState = this.state;\r\n    this.onToken = this.onToken.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.onReset = this.onReset.bind(this);\r\n  }\r\n\r\n  onToken(token: string) {\r\n    this.setValue(nameof<ContactWidgetFieldsState>(\"token\"), token);\r\n  }\r\n\r\n  onChange(event: React.ChangeEvent<HTMLInputElement> | React.ChangeEvent<HTMLTextAreaElement>) {\r\n    const name = event.target.name as keyof ContactWidgetFieldsState;\r\n    const value = event.target.value;\r\n    this.setValue(name, value);\r\n  }\r\n\r\n  async onSubmit(event: React.ChangeEvent<HTMLFormElement>) {\r\n    this.setState({ status: 'sending' });\r\n\r\n    try {\r\n      event.preventDefault();\r\n\r\n      let hasErrors = Object.values(this.state.errors).filter(x => x.length > 0).length > 0;\r\n\r\n      if (!this.state.values.token) {\r\n        hasErrors = true;\r\n        this.setError(nameof<ContactWidgetFieldsState>(\"token\"), \"Please also check \\\"I'm not a robot\\\" above\");\r\n      }\r\n\r\n      if (!this.state.values.name) {\r\n        hasErrors = true;\r\n        this.setError(nameof<ContactWidgetFieldsState>(\"name\"), \"Please tell us your name so that we know how to greet you\");\r\n      }\r\n\r\n      if (!this.state.values.email) {\r\n        hasErrors = true;\r\n        this.setError(nameof<ContactWidgetFieldsState>(\"email\"), \"Please tell us your email so that we know how to contact you\");\r\n      }\r\n\r\n      if (!this.state.values.message) {\r\n        hasErrors = true;\r\n        this.setError(nameof<ContactWidgetFieldsState>(\"message\"), \"Just a brief message how we can help you\");\r\n      }\r\n\r\n      if (hasErrors) {\r\n        gtag('event', 'validation failure', {\r\n          'event_category': 'contact',\r\n          'event_label': 'failure',\r\n          'value': 'value'\r\n        });\r\n        \r\n        this.setState({ status: 'ready' });\r\n        return;\r\n      }\r\n\r\n      const submissionStart = window.performance ? window.performance.now() : 0;\r\n\r\n      const url = \"https://ultima-labs.azure-api.net/ultima-labs.com.au/contact/\";           \r\n      const options: RequestInit = {\r\n        method: \"POST\",\r\n        body: this.state.values.message,\r\n        headers: {\r\n          \"Content-Type\": \"text/plain\",\r\n          \"X-From-Name\": this.state.values.name,\r\n          \"X-From-Email\": this.state.values.email,\r\n          \"X-From-Phone\": this.state.values.phone,\r\n          \"X-Subject\": this.state.values.subject\r\n        }\r\n      };\r\n\r\n      await fetch(url, options);\r\n\r\n      const submissionEnd = window.performance ? window.performance.now() : 0;\r\n\r\n      setInterval(this.onReset, 5000);\r\n\r\n      this.setState({ status: 'sent' });\r\n\r\n      if (window.performance) {\r\n        gtag('event', 'timing_complete', {\r\n          'name' : 'Send e-mail',\r\n          'value' : submissionEnd - submissionStart,\r\n          'event_category' : 'contact'\r\n        });\r\n      }\r\n      \r\n      gtag('event', 'submission success', {\r\n        'event_category': 'contact',\r\n        'event_label': 'success',\r\n        'value': 'value'\r\n      });\r\n    } catch (e) {\r\n      console.error(e);\r\n\r\n      gtag('event', 'submission error', {\r\n        'event_category': 'contact',\r\n        'event_label': 'failure',\r\n        'value': e.toString()\r\n      });\r\n\r\n      setInterval(this.onReset, 5000);\r\n\r\n      this.setState({ status: 'error' });\r\n    }\r\n  }\r\n\r\n  onReset() {\r\n    this.setState(this.baseState);\r\n  }\r\n\r\n  setValue(name: keyof ContactWidgetFieldsState, value: string) {\r\n    this.setState((x: ContactWidgetState) => {\r\n      return {\r\n        ...x,\r\n        values: {\r\n          ...x.values,\r\n          [name]: value,\r\n        },\r\n        errors: {\r\n          ...x.errors,\r\n          [name]: \"\"\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  setError(name: keyof ContactWidgetFieldsState, error: string) {\r\n    this.setState((x: ContactWidgetState) => {\r\n      return {\r\n        ...x,\r\n        errors: {\r\n          ...x.errors,\r\n          [name]: error\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const viewForm = \r\n      <form onSubmit={this.onSubmit}>\r\n        <div>\r\n          <label className=\"required\">Your name</label>\r\n          <input type=\"text\" name={nameof<ContactWidgetFieldsState>(\"name\")}\r\n                value={this.state.values.name} \r\n                disabled={this.state.status !== 'ready'}\r\n                onChange={this.onChange} />\r\n          <span className=\"form-error\">{this.state.errors.name}</span>\r\n        </div>\r\n        <div>\r\n          <label className=\"required\">Your email</label>\r\n          <input type=\"email\" name={nameof<ContactWidgetFieldsState>(\"email\")}\r\n                value={this.state.values.email} \r\n                disabled={this.state.status !== 'ready'}\r\n                onChange={this.onChange} />\r\n          <span className=\"form-error\">{this.state.errors.email}</span>\r\n        </div>\r\n        <div>\r\n          <label>Your phone</label>\r\n          <input type=\"telephone\" name={nameof<ContactWidgetFieldsState>(\"phone\")}\r\n                value={this.state.values.phone} \r\n                disabled={this.state.status !== 'ready'}\r\n                onChange={this.onChange} />\r\n          <span className=\"form-error\">{this.state.errors.phone}</span>\r\n        </div>\r\n        <div>\r\n          <label>Subject</label>\r\n          <input type=\"text\" name={nameof<ContactWidgetFieldsState>(\"subject\")}\r\n                value={this.state.values.subject} \r\n                disabled={this.state.status !== 'ready'}\r\n                onChange={this.onChange} />\r\n          <span className=\"form-error\">{this.state.errors.subject}</span>\r\n        </div>\r\n        <div>\r\n          <label className=\"required\">Message</label>\r\n          <textarea name={nameof<ContactWidgetFieldsState>(\"message\")}\r\n                    value={this.state.values.message} \r\n                    disabled={this.state.status !== 'ready'}\r\n                    onChange={this.onChange} />\r\n          <span className=\"form-error\">{this.state.errors.message}</span>\r\n        </div>\r\n        <div>\r\n          <label className=\"required-description\">Fields marked with asterisks are required.</label>\r\n          <label>Personal details collected are used solely to reply you back and will not be stored or passed further to any third parties.</label>\r\n          <GoogleCaptcha onValidated={this.onToken} />\r\n          <input type=\"submit\" value=\"Send\" className=\"primary accent\" \r\n                disabled={this.state.status !== 'ready'} />\r\n          <span className=\"form-error\">{this.state.errors.token}</span>\r\n        </div>\r\n      </form>;\r\n\r\n    const viewSent = \r\n      <div id=\"contact-widget-sent\">\r\n        <img src={logo} alt=\"Ultima Labs logo\"></img>\r\n        <p>Thank you for contacting us!<br/>Your message was sent successfully.</p>\r\n        <p>We will be in touch shortly.</p>\r\n      </div>;\r\n\r\n    const viewError = \r\n      <div id=\"contact-widget-error\">\r\n        <p>Something went wrong...<br/>Your message was not sent.</p>\r\n        <p>Please try again later.</p>\r\n      </div>;\r\n\r\n    if (this.state.status === 'sent') {\r\n      return viewSent;\r\n    } else if (this.state.status === 'error') {\r\n      return viewError;\r\n    } else {\r\n      return viewForm;\r\n    }\r\n  }\r\n}","import React from 'react';\r\nimport site from '../site.svg'\r\nimport './SVG.scss';\r\n\r\nexport type SVGProps = {\r\n    icon: 'location'\r\n         |'phone'\r\n         |'twitter'\r\n         |'linkedin'\r\n         |'facebook'\r\n         |'github'\r\n         |'vk'\r\n         |'envelope'\r\n         |'profile';\r\n}\r\n\r\nexport default class SVG extends React.PureComponent<SVGProps> {\r\n  render() {\r\n    return (\r\n      <svg className={`icon icon-${this.props.icon}`}>\r\n        <use xlinkHref={`${site}#icn-${this.props.icon}`} />\r\n      </svg>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ContactWidget from './ContactWidget';\r\nimport SVG from '../framework/SVG';\r\nimport SecureLink, {ExternalLink, LinkTarget} from '../framework/Links';\r\nimport './ContactContent.scss';\r\nimport qr from '../qr.svg'\r\n\r\nexport default class ContactContent extends React.PureComponent {\r\n  render() {\r\n    return (\r\n      <main id=\"about-us\">\r\n        <section id=\"online\">\r\n          <section id=\"contact\">\r\n            <h5>Contact us now</h5>\r\n            <div>\r\n              <ContactWidget />\r\n            </div>\r\n          </section>\r\n        </section>\r\n        <section id=\"conventional\">\r\n          <section id=\"location\">\r\n            <h5>Visit us</h5>\r\n            <SVG icon=\"location\" />\r\n            <address>Level 9, 307 Queen Street<br/>Brisbane, QLD 4000<br/>Australia</address>\r\n          </section>\r\n          <section id=\"correspondence\">\r\n            <h5>Mail us</h5>\r\n            <SVG icon=\"envelope\" />\r\n            <address>PO Box 100<br/>Ferny Hills DC, QLD 4055<br/>Australia</address>\r\n          </section>\r\n          <section id=\"phone\">\r\n            <h5>Call us</h5>\r\n            <SVG icon=\"phone\" />\r\n            <a href=\"tel:+61412345678\">+61 412 345 678</a>\r\n          </section>\r\n          <section id=\"social\">\r\n            <h5>Follow us</h5>\r\n            <ExternalLink href=\"https://twitter.com/ultimalabs\" target={LinkTarget.Blank}>\r\n              <SVG icon=\"twitter\" />\r\n            </ExternalLink>\r\n            <ExternalLink href=\"https://www.facebook.com/ultimalabs\" target={LinkTarget.Blank}>\r\n              <SVG icon=\"facebook\" />\r\n            </ExternalLink>\r\n            <ExternalLink href=\"https://www.linkedin.com/company/ultima-labs\" target={LinkTarget.Blank}>\r\n              <SVG icon=\"linkedin\" />\r\n            </ExternalLink>\r\n            <ExternalLink href=\"https://github.com/ultima-labs\" target={LinkTarget.Blank}>\r\n              <SVG icon=\"github\" />\r\n            </ExternalLink>\r\n            <ExternalLink href=\"https://vk.com/ultimalabs\" target={LinkTarget.Blank}>\r\n              <SVG icon=\"vk\" />\r\n            </ExternalLink>\r\n          </section>\r\n          <section id=\"vcard\">\r\n            <h5>Add to your contacts</h5>\r\n            <SVG icon=\"profile\" />\r\n            <SecureLink href={'vcard.vcf'} isDownload={true}>Download a VCARD</SecureLink>\r\n          </section>\r\n        </section>\r\n        <section id=\"qr\">\r\n          <h5>Add to your phone</h5>\r\n          <img src={qr} alt=\"Contact QR code\" />\r\n        </section>\r\n      </main>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport './AppLogo.scss';\r\nimport logo from '../logo.svg';\r\n\r\nexport default class AppLogo extends React.PureComponent {\r\n  render(): React.ReactElement {\r\n    return (\r\n      <div className=\"app-logo\">\r\n        <img src={logo} alt=\"Ultima Labs logo\" />\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport './AppBrand.scss';\r\n\r\nexport default class AppBrand extends React.PureComponent {\r\n  render(): React.ReactElement {\r\n    return (\r\n      <div className=\"app-brand\">\r\n        <p className=\"brandname\">Ultima Labs</p>\r\n        <p className=\"strapline\">Digitalize. Modernize. Transform. Innovate.</p>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport Routes, { RouteID } from './Routes';\r\nimport { Link } from 'react-router-dom';\r\nimport './AppMenu.scss';\r\n\r\nexport class AppMenuItemProps {\r\n  routeID?: RouteID\r\n}\r\n\r\nexport class AppMenuItemState {\r\n}\r\n\r\nexport class AppMenuItem extends React.PureComponent<AppMenuItemProps, AppMenuItemState> {\r\n  render() {\r\n    if (this.props.routeID) {\r\n      const id = this.props.routeID;\r\n      const definition = Routes[id];\r\n      // const children = Object.values(Routes).filter((x) => x.parents && x.parents.includes(id));\r\n      return (\r\n        <div className=\"app-menu-item\">\r\n          <Link to={definition.path}>{definition.linkTitle}</Link>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"app-menu-item\">\r\n          {this.props.children}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport class AppMenuProps {\r\n}\r\n\r\nexport class AppMenuState {\r\n}\r\n\r\nexport class AppMenuDesktopProps extends AppMenuProps {\r\n}\r\n\r\nexport class AppMenuDesktopState extends AppMenuState {\r\n}\r\n\r\nexport class AppMenuDesktop extends React.Component<AppMenuDesktopProps, AppMenuDesktopState> {\r\n  render() {\r\n    const Items = Object\r\n      .keys(Routes)\r\n      .map(x => parseInt(x))\r\n      .filter(x => !Routes[x].parents)\r\n      .map(x => <AppMenuItem key={x} routeID={x}/>);\r\n    return (\r\n      <div className=\"app-menu-desktop\">\r\n          {Items}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport class AppMenuTabletProps extends AppMenuProps {\r\n}\r\n\r\nexport class AppMenuTabletState extends AppMenuState {\r\n}\r\n\r\nexport class AppMenuTablet extends React.Component<AppMenuTabletProps, AppMenuTabletState> {\r\n  render() {\r\n    const Items = Object\r\n      .keys(Routes)\r\n      .map(x => parseInt(x))\r\n      .filter(x => !Routes[x].parents)\r\n      .map(x => <AppMenuItem key={x} routeID={x}/>);\r\n    return (\r\n      <div className=\"app-menu-tablet\">\r\n          {Items}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport class AppMenuMobileProps extends AppMenuProps {\r\n}\r\n\r\nexport class AppMenuMobileState extends AppMenuState {\r\n  isExpanded: boolean = false\r\n}\r\n\r\nexport class AppMenuMobile extends React.Component<AppMenuMobileProps, AppMenuMobileState> {\r\n  constructor(props: AppMenuMobileProps) {\r\n    super(props);\r\n    \r\n    this.state = new AppMenuMobileState();\r\n    this.clicked = this.clicked.bind(this);\r\n  }\r\n\r\n  clicked(e: React.MouseEvent) {\r\n    e.preventDefault();\r\n    this.setState({ isExpanded: !this.state.isExpanded });\r\n  }\r\n\r\n  render() {\r\n    const Items = Object\r\n      .keys(Routes)\r\n      .map(x => parseInt(x))\r\n      .filter(x => !Routes[x].parents)\r\n      .map(x => <AppMenuItem key={x} routeID={x}/>);\r\n    return (\r\n      <div className=\"app-menu-mobile\" aria-expanded={this.state.isExpanded}>\r\n          <div className=\"app-menu-burger\" onClick={this.clicked}>\r\n            <div className=\"app-menu-indicator\">\r\n              <span/>\r\n              <span/>\r\n              <span/>\r\n              <span/>\r\n            </div>\r\n            <div className=\"app-menu-expansion\">\r\n              {Items}\r\n            </div>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport AppLogo from './AppLogo';\r\nimport AppBrand from \"./AppBrand\";\r\nimport { AppMenuTablet, AppMenuDesktop, AppMenuMobile } from './AppMenu';\r\nimport './AppHeader.scss';\r\n\r\nexport default class AppHeader extends React.PureComponent {\r\n  render(): React.ReactElement {\r\n    return (\r\n        <header className=\"app-header\">\r\n            <div className=\"display-flex-row flex-min\">\r\n                <AppMenuMobile />\r\n            </div>\r\n            <div className=\"display-flex-row flex-min\">\r\n                <AppLogo />\r\n            </div>\r\n            <div className=\"display-flex-row flex-auto\">\r\n                <AppBrand />\r\n            </div>\r\n            <div className=\"display-flex-row flex-min\">\r\n                <AppMenuTablet />\r\n                <AppMenuDesktop />\r\n            </div>\r\n        </header>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport './AppBody.scss';\r\n\r\nexport default class AppBody extends React.PureComponent {\r\n  render() {\r\n    return (\r\n      <div className=\"app-body\">\r\n          {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport {MetaDef} from \"./Routes\";\r\n\r\nexport interface AppContentProps {\r\n  title: string,\r\n  meta?: MetaDef\r\n}\r\n\r\nclass AppContent extends React.PureComponent<AppContentProps> {\r\n  componentDidMount() {\r\n    document.title = 'Ultima Labs | ' + this.props.title;\r\n\r\n    const metas = document.head.getElementsByTagName(\"meta\");\r\n\r\n    let mapped: { [id: string]: HTMLMetaElement } = {};\r\n\r\n    for (let i = 0, length = metas.length; i < length; ++i) {\r\n      const meta = metas.item(i);\r\n      if (meta && meta.name) {\r\n        mapped[meta.name] = meta;\r\n      }\r\n    }\r\n\r\n    this.invalidateMetaValue(mapped, \"og:title\", this.props.meta?.title);\r\n    this.invalidateMetaValue(mapped, \"og:description\", this.props.meta?.description);\r\n  }\r\n\r\n  invalidateMetaValue(map: { [id: string]: HTMLMetaElement }, key: string, value?: string) {\r\n    const hasKey = Object.keys(map).findIndex(x => x === key) >= 0;\r\n    if (value && value.length) {\r\n      if (hasKey) {\r\n        map[key].content = value;\r\n      } else {\r\n        const meta = document.createElement(\"meta\");\r\n        meta.name = key;\r\n        meta.content = value;\r\n\r\n        document.head.appendChild(meta);\r\n      }\r\n    } else if (hasKey) {\r\n      document.head.removeChild(map[key]);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <>{this.props.children}</>\r\n  }\r\n}\r\n\r\nexport default AppContent;","import React from 'react';\r\nimport { RouteID } from \"./Routes\";\r\nimport { InternalLink, ExternalLink, LinkTarget } from '../framework/Links';\r\nimport './AppFooter.scss';\r\n\r\nexport const AppFooterIntro: React.FC = (props) => {\r\n  return (\r\n      <div className=\"app-footer-intro\">{props.children}</div>\r\n  );\r\n}\r\n\r\nexport const AppFooterColumn: React.FC = (props) => {\r\n  return (\r\n      <div className=\"app-footer-column\">{props.children}</div>\r\n  );\r\n}\r\n\r\nexport const AppFooterOutro: React.FC = (props) => {\r\n  return (\r\n      <div className=\"app-footer-outro\">{props.children}</div>\r\n  );\r\n}\r\n\r\nexport class AppFooterSettings {\r\n  isSticky: boolean = false;\r\n}\r\n\r\nexport class AppFooterProps {\r\n}\r\n\r\nexport interface AppFooterState {\r\n  settings: AppFooterSettings\r\n}\r\n\r\nexport class AppFooter extends React.Component<AppFooterProps, AppFooterState> {\r\n  private static readonly SETTING_NAME: string = 'app-footer';\r\n\r\n  componentDidMount(): void {\r\n    let settings = new AppFooterSettings();\r\n    try {\r\n      const existing = window.localStorage.getItem(AppFooter.SETTING_NAME );\r\n      if (existing) {\r\n        settings = JSON.parse(existing);\r\n      }\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n    this.setState({ settings: settings })\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Readonly<AppFooterProps>, prevState: Readonly<AppFooterState>, snapshot?: any): void {\r\n    if (this.state.settings) {\r\n      window.localStorage.setItem(AppFooter.SETTING_NAME, JSON.stringify(this.state.settings));\r\n    }\r\n  }\r\n\r\n  render(): JSX.Element {\r\n    return (\r\n        <footer className=\"app-footer\">\r\n          <div className=\"flex-max display-flex-row-wrap app-footer-columns\">\r\n            <div className=\"flex-auto\" />\r\n            <div className=\"flex-auto text-align-center\">\r\n              <div className=\"display-inline-block text-align-left\">\r\n                <p><InternalLink routeID={RouteID.ROUTE_ID_HOME} /></p>\r\n                <p><InternalLink routeID={RouteID.ROUTE_ID_DIGITALIZE} /></p>\r\n                <p><InternalLink routeID={RouteID.ROUTE_ID_MODERNIZE} /></p>\r\n                <p><InternalLink routeID={RouteID.ROUTE_ID_TRANSFORM} /></p>\r\n                <p><InternalLink routeID={RouteID.ROUTE_ID_INNOVATE} /></p>\r\n                <p><InternalLink routeID={RouteID.ROUTE_ID_CONTACT} /></p>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex-auto text-align-center\">\r\n              <div className=\"display-inline-block text-align-left\">\r\n                <p>Follow us online:</p>\r\n                <p>Twitter: <ExternalLink href=\"https://twitter.com/ultimalabs\" target={LinkTarget.Blank}>@ultimalabs</ExternalLink></p>\r\n                <p>Facebook: <ExternalLink href=\"https://www.facebook.com/ultimalabs\" target={LinkTarget.Blank}>@ultimalabs</ExternalLink></p>\r\n                <p>LinkedIn: <ExternalLink href=\"https://www.linkedin.com/company/ultima-labs\" target={LinkTarget.Blank}>ultima-labs</ExternalLink></p>\r\n                <p>GitHub: <ExternalLink href=\"https://github.com/ultima-labs\" target={LinkTarget.Blank}>ultima-labs</ExternalLink></p>\r\n                <p>VK: <ExternalLink href=\"https://vk.com/ultimalabs\" target={LinkTarget.Blank}>ultimalabs</ExternalLink></p>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex-auto\" />\r\n          </div>\r\n          <div className=\"flex-max display-flex-row-wrap app-footer-outro\">\r\n            <span className=\"flex-min\"><strong>ABN</strong> 87 616 389 550</span>\r\n            <span className=\"flex-min\"><strong>ACN</strong> 616 389 550</span>\r\n            <span className=\"flex-auto\" />\r\n            <span className=\"flex-min\">Copyright &copy; Ultima Labs Pty Ltd, 2016-{new Date().getFullYear()}.</span>\r\n            <span className=\"flex-min\">All Rights Reserved.</span>\r\n          </div>\r\n        </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppFooter;","import React from 'react';\r\nimport { Router, Switch, Route } from 'react-router-dom';\r\nimport Routes from './Routes';\r\nimport AppHeader from './AppHeader';\r\nimport AppBody from './AppBody';\r\nimport AppContent from './AppContent';\r\nimport AppFooter from './AppFooter';\r\nimport './App.scss';\r\nimport { createBrowserHistory } from 'history';\r\n\r\ndeclare global {\r\n  function gtag(...params: any[]): void;\r\n}\r\n\r\nexport default class App extends React.PureComponent {\r\n  componentDidMount() {\r\n  }\r\n\r\n  render() {    \r\n    const history = createBrowserHistory({\r\n      basename: process.env.PUBLIC_URL\r\n    });\r\n\r\n    history.listen(function (location) {\r\n      gtag('config', 'UA-151530889-1', { \r\n        'optimize_id': 'GTM-PV4FZNF',\r\n        'page_title': document.title,\r\n        'page_location': location.pathname + location.search,\r\n        'page_path': location.pathname });\r\n    });\r\n\r\n    const RoutesSwitch = Object\r\n      .keys(Routes)\r\n      .map(x => parseInt(x))\r\n      .map(x => <Route key={x} exact path={Routes[x].path}><AppContent title={Routes[x].pageTitle} meta={Routes[x].meta}>{Routes[x].control}</AppContent></Route>);\r\n    return (\r\n      <Router history={history}>\r\n        <div className=\"app\">\r\n          <AppHeader/>\r\n          <AppBody>\r\n            <Switch>\r\n              {RoutesSwitch}\r\n            </Switch>\r\n          </AppBody>\r\n          <AppFooter />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './application/App';\nimport * as serviceWorker from './serviceWorker';\nimport './framework/site.scss';\nimport './index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}